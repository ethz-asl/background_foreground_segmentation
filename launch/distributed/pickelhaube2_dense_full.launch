<?xml version="1.0" encoding="utf-8"?>
<!--
Launch file for Selective ICP with rviz
-->

<launch>

  <!-- Proper Output Info -->
  <env name="ROSCONSOLE_FORMAT" value="[${severity}] (${node}) [${time}]: ${message}\n" />

  <param name="/use_sim_time" value="true" />
    <arg name="cad_file" default="$(find cpt_selective_icp)/resources/cla.json" />
    <arg name="rosbag" />
    <arg name="logprefix" />


    <!--node name="mesh_positioning"
          pkg="cpt_selective_icp"
          type="position_cad_with_marker.py"
          output="screen">
        <param name="marker_parent_frame" value="map" />
        <param name="marker_frame_name" value="marker" />
      </node-->


    <node pkg="background_foreground_segmentation"
          type="pose_logger.py"
          name="poselogger">
        <param name="filename" value="/home/matthias/data/rss_2021_data/$(arg logprefix)_icp.csv" />
    </node>
    <node pkg="background_foreground_segmentation"
          type="point_logger.py"
          name="leicalogger">
        <param name="filename" value="/home/matthias/data/rss_2021_data/$(arg logprefix)_leica.csv" />
        <param name="overwrite" value="false" />
    </node>

    <!-- Start Dataset Creator node for each camera -->
    <node pkg="background_foreground_segmentation" type="background_foreground_segmentation_dense_node"
          name="dataset_creator_cam2_from_depth" output="screen">
        <rosparam command="load" file="$(find background_foreground_segmentation)/config/dense_dataset_creator.yaml"/>
        <param name="outputFolder" value="/home/matthias/data/rss_2021_data/pseudolabels_depth/"/>
        <param name="cameraImageTopic" value="/pickelhaube_resized/cam2/image"/>
        <param name="cameraInfoTopic" value="/pickelhaube_resized/cam2/camera_info"/>
        <param name="cameraFrame" value="/cam2_rectified_frame"/>
        <param name="outputTopic" value="/meshdist/kinect/original"/>
        <param name="labelsTopic" value="/meshdist/kinect/projected_pc"/>
        <param name="binaryLabelsTopic" value="/meshdist/kinect/bin_labels"/>
        <param name="distanceTopic" value="/meshdist/kinect/projected_pc_distance"/>
        <param name="distanceTopic" value="/meshdist/kinect/projected_pc_distance"/>
        <param name="previewTopic" value="/meshdist/kinect/preview"/>
    </node>

    <node pkg="background_foreground_segmentation" type="background_foreground_segmentation_dense_node"
          name="dataset_creator_cam2_from_lidar" output="screen">
        <rosparam command="load" file="$(find background_foreground_segmentation)/config/dense_dataset_creator_lidar.yaml"/>
        <param name="outputFolder" value="/home/matthias/data/rss_2021_data/pseudolabels_lidar/"/>
        <param name="cameraImageTopic" value="/pickelhaube_resized/cam2/image"/>
        <param name="cameraInfoTopic" value="/pickelhaube_resized/cam2/camera_info"/>
        <param name="cameraFrame" value="/cam2_rectified_frame"/>
        <param name="outputTopic" value="/meshdist/lidar/original"/>
        <param name="labelsTopic" value="/meshdist/lidar/projected_pc"/>
        <param name="binaryLabelsTopic" value="/meshdist/lidar/bin_labels"/>
        <param name="distanceTopic" value="/meshdist/lidar/projected_pc_distance"/>
        <param name="previewTopic" value="/meshdist/lidar/preview"/>
    </node> 

    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find cpt_selective_icp)/launch/rviz.rviz" />

    <!-- should be started last for handover to ICP-->
    <include file="$(find background_foreground_segmentation)/launch/pickelhaube/pickelhaube_cams_from_bag.launch">
        <arg name="rosbag" value="$(arg rosbag)" />
        <arg name="rate" value="0.1" />
    </include>

    <!-- for Realsense: Fix camera_pose_frame to robot-->
    <node pkg="tf2_ros" type="static_transform_publisher" name="tracking_cam_to_rslidar"
				args="0.008 -0.309 0.12 0 0 0 1  /realsense_t265_pose_frame /rslidar"/>

    <node name="realsense_broadcast"
          type="realsense_broadcast_node"
          pkg="cpt_selective_icp_dyn"
          output="screen" >
          <param name="odomTopic" value="/realsense_t265/odom/sample" />
          <param name="realsenseOdomTopic" value="/realsense_odom" />
          <param name="inputQueueSize" value="5" />
          <param name="tfMapFrame" value="5" />
          <param name="cameraPoseFrame" value="realsense_t265_pose_frame" />
          <param name="cameraOdomFrame" value="realsense_t265_odom_frame" />
          <param name="realsenseCov" value="0.1" />
    </node>

    <node name="mapper"
          type="cpt_selective_icp_dyn_node"
          pkg="cpt_selective_icp_dyn"
          output="screen" >
    <rosparam command="load" file="$(find background_foreground_segmentation)/launch/realsense_experiments/mapper_parameters_dyn_realsense.yaml" />
                <param name="scanTopic" value="/rslidar_points" />
                <param name="odomTopic" value="/realsense_t265/odom/sample" />
                <param name="skipScans" value="1" /> 
                <param name="ekfEnable" value="false" />

        <param name="cadTopic" value="mesh_publisher/mesh_out" />
        <param name="icpConfig"
               value="$(find background_foreground_segmentation)/launch/paper_experiments/full_icp.yaml" />
        <param name="selectiveIcpConfig"
               value="$(find background_foreground_segmentation)/launch/paper_experiments/selective_icp.yaml" />
        <param name="inputFiltersConfig"
               value="$(find background_foreground_segmentation)/launch/paper_experiments/input_filters.yaml" />
        <param name="mapPostFiltersConfig"
               value="$(find background_foreground_segmentation)/launch/paper_experiments/map_post_filter.yaml" />
        <param name="mapPreFiltersConfig"
               value="$(find background_foreground_segmentation)/launch/paper_experiments/map_pre_filter.yaml" />
        <param name="path"
                 value="$(find cpt_selective_icp_dyn)" />
    </node>

    <!-- <node name="mapper"
          type="cpt_selective_icp_node"
          pkg="cpt_selective_icp"
          output="screen" >
    <rosparam command="load" file="$(find background_foreground_segmentation)/launch/paper_experiments/mapper_parameters.yaml" />
                <param name="standaloneICP" value="true" />
                <param name="scanTopic" value="/rslidar_points" />
        <param name="cadTopic" value="mesh_publisher/mesh_out" />
        <param name="icpConfig"
               value="$(find background_foreground_segmentation)/launch/paper_experiments/full_icp.yaml" />
        <param name="selectiveIcpConfig"
               value="$(find background_foreground_segmentation)/launch/paper_experiments/selective_icp.yaml" />
        <param name="inputFiltersConfig"
               value="$(find background_foreground_segmentation)/launch/paper_experiments/input_filters.yaml" />
        <param name="mapPostFiltersConfig"
               value="$(find background_foreground_segmentation)/launch/paper_experiments/map_post_filter.yaml" />
        <param name="mapPreFiltersConfig"
               value="$(find background_foreground_segmentation)/launch/paper_experiments/map_pre_filter.yaml" />
        <param name="path"
                 value="$(find cpt_selective_icp)" />
    </node> -->

       <node name="cloud_distance"
          type="cloud_distance_node"
          pkg="cpt_selective_icp_dyn"
          output="screen" >
          <param name="cadTopic" value="mesh_publisher/mesh_out" />
          <param name="cloudInTopic" value="/points2" />
          <param name="inputQueueSize" value="5" />
          <param name="tfMapFrame" value="map" />
          <param name="cloudOutTopic" value="/depth/distance_pc" />
          <param name="cloudFrame" value="pickelhaubedepth_camera_link" />
          <param name="mapSamplingDensity" value="100" />
       </node>

    <node name="mesh_publisher"
          pkg="cpt_utils"
          type="mesh_publisher_node"
          output="screen"
          launch-prefix="bash -c 'sleep 4; $0 $@'">
        <param name="publish_on_start" value="true"/>
        <param name="default_filename" value="$(arg cad_file)"/>
        <param name="frame_name" value="marker"/>
      </node>
</launch>
