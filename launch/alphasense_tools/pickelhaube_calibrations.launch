<launch>

  <!-- Proper Output Info -->
  <env name="ROSCONSOLE_FORMAT" value="[${severity}] (${node}) [${time}]: ${message}\n" />

  <node pkg="tf2_ros"
        type="static_transform_publisher"
        name="imu_cam0_transformer"
        args="-0.071998 -0.101917 0.016466 0.002983 -0.706968 0.001687 0.707237 IMUFRAME cam0_sensor_frame" />
        <!-- x y z qx qy qz qw frame_id child_frame_id -->
  <node pkg="tf2_ros"
        type="static_transform_publisher"
        name="imu_cam1_transformer"
        args="-0.020281 -0.121728 0.078013 -0.000111 -0.000927 -0.005481 0.999985 IMUFRAME cam1_sensor_frame" />
        <!-- x y z qx qy qz qw frame_id child_frame_id -->
  <node pkg="tf2_ros"
        type="static_transform_publisher"
        name="imu_cam2_transformer"
        args="0.024679 -0.097825 0.032541 -0.001417 0.707570 0.000881 0.706641 IMUFRAME cam2_sensor_frame" />
        <!-- x y z qx qy qz qw frame_id child_frame_id -->
  <node pkg="tf2_ros"
        type="static_transform_publisher"
        name="imu_cam3_transformer"
        args="-0.013916 -0.122345 -0.025650 -0.005502 0.999982 -0.002411 0.000218 IMUFRAME cam3_sensor_frame" />
        <!-- x y z qx qy qz qw frame_id child_frame_id -->
  <node pkg="tf2_ros"
        type="static_transform_publisher"
        name="imu_lidar_broadcaster"
        args="0.016893 -0.045470 0.106389 -0.712754 -0.019267 0.010382 0.701072 rslidar IMUFRAME" />
  <!--node pkg="tf2_ros"
        type="static_transform_publisher"
        name="imu_lidar_broadcaster"
        args="-0.0162661 0.105409 0.0479158 0.712755 0.0192672 -0.0103822 0.701072 IMUFRAME rslidar" /-->
        <!-- x y z qx qy qz qw frame_id child_frame_id -->


  <node pkg="image_undistort"
        type="image_undistort_node"
        name="cam0_undistorter">
    <rosparam file="$(find background_foreground_segmentation)/launch/alphasense_tools/cam0_intr.yaml"/>
    <param name="input_camera_info_from_ros_params" value="true"/>
    <param name="input_camera_namespace" value="cam0"/>
    <param name="output_frame" value="cam0_rectified_frame"/>
    <remap from="input/image" to="/alphasense_driver_ros/cam0/rgb"/>
    <remap from="output/image" to="/pickelhaube/cam0/image"/>
    <remap from="output/camera_info" to="/pickelhaube/cam0/camera_info"/>
  </node>
  <node pkg="image_undistort"
        type="image_undistort_node"
        name="cam1_undistorter">
    <rosparam file="$(find background_foreground_segmentation)/launch/alphasense_tools/cam1_intr.yaml"/>
    <param name="input_camera_info_from_ros_params" value="true"/>
    <param name="input_camera_namespace" value="cam0"/>
    <param name="output_frame" value="cam1_rectified_frame"/>
    <remap from="input/image" to="/alphasense_driver_ros/cam1/rgb"/>
    <remap from="output/image" to="/pickelhaube/cam1/image"/>
    <remap from="output/camera_info" to="/pickelhaube/cam1/camera_info"/>
  </node>
  <node pkg="image_undistort"
        type="image_undistort_node"
        name="cam2_undistorter">
    <rosparam file="$(find background_foreground_segmentation)/launch/alphasense_tools/cam2_intr.yaml"/>
    <param name="input_camera_info_from_ros_params" value="true"/>
    <param name="input_camera_namespace" value="cam0"/>
    <param name="output_frame" value="cam2_rectified_frame"/>
    <remap from="input/image" to="/alphasense_driver_ros/cam2/rgb"/>
    <remap from="output/image" to="/pickelhaube/cam2/image"/>
    <remap from="output/camera_info" to="/pickelhaube/cam2/camera_info"/>
  </node>
  <node pkg="image_undistort"
        type="image_undistort_node"
        name="cam3_undistorter">
    <rosparam file="$(find background_foreground_segmentation)/launch/alphasense_tools/cam3_intr.yaml"/>
    <param name="input_camera_info_from_ros_params" value="true"/>
    <param name="input_camera_namespace" value="cam0"/>
    <param name="output_frame" value="cam3_rectified_frame"/>
    <remap from="input/image" to="/alphasense_driver_ros/cam3/rgb"/>
    <remap from="output/image" to="/pickelhaube/cam3/image"/>
    <remap from="output/camera_info" to="/pickelhaube/cam3/camera_info"/>
  </node>
</launch>
