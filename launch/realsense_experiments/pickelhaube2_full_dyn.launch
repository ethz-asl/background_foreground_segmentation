<?xml version="1.0" encoding="utf-8"?>
<!--
Launch file for Selective ICP with rviz
-->

<launch>

  <!-- Proper Output Info -->
  <env name="ROSCONSOLE_FORMAT" value="[${severity}] (${node}) [${time}]: ${message}\n" />

  <param name="/use_sim_time" value="true" />
    <arg name="cad_file" default="$(find cpt_selective_icp)/resources/cla.json" />
    <arg name="rosbag" />
    <arg name="logprefix" />
    <arg name="segmentation_model" />
    <arg name="input_height" />
    <arg name="input_width" />
    <arg name="threshold" default="150" />

 <!--node pkg="rosbag"
        type="record"
        name="output_recorder"
        args="-o /tmp/bfseg_output_$(arg logprefix)  /mesh_publisher/mesh_out /leica/position /rslidar_points /points_filtered /pickelhaube_resized/cam0/image /pickelhaube_resized/cam0/segmented /pickelhaube_resized/cam1/image /pickelhaube_resized/cam1/segmented /pickelhaube_resized/cam2/image /pickelhaube_resized/cam2/segmented /tf /tf_static"
        /-->

    <node pkg="background_foreground_segmentation"
          type="pose_logger.py"
          name="poselogger">
        <param name="filename" value="$(find background_foreground_segmentation)/logs/$(arg logprefix)_icp.csv" />
    </node>
    <node pkg="background_foreground_segmentation"
          type="point_logger.py"
          name="leicalogger">
        <param name="filename" value="$(find background_foreground_segmentation)/logs/$(arg logprefix)_leica.csv" />
        <param name="overwrite" value="false" />
    </node>

    <!-- Start Dataset Creator node for each camera -->
    <node pkg="background_foreground_segmentation" type="background_foreground_segmentation_node2"
          name="dataset_creator_cam0" output="screen">
        <rosparam command="load" file="$(find background_foreground_segmentation)/config/online_dataset_creator.yaml"/>
        <param name="outputFolder" value="/tmp/"/>
        <param name="cameraImageTopic" value="/pickelhaube_resized/cam0/image"/>
        <param name="cameraInfoTopic" value="/pickelhaube_resized/cam0/camera_info"/>
        <param name="cameraFrame" value="/cam0_rectified_frame"/>
        <param name="outputTopic" value="/meshdist/cam0/original"/>
        <param name="labelsTopic" value="/meshdist/cam0/projected_pc"/>
        <param name="distanceTopic" value="/meshdist/cam0/projected_pc_distance"/>
    </node>

    <node pkg="background_foreground_segmentation" type="background_foreground_segmentation_node2"
          name="dataset_creator_cam1" output="screen">
        <rosparam command="load" file="$(find background_foreground_segmentation)/config/online_dataset_creator.yaml"/>
        <param name="outputFolder" value="/tmp/"/>
        <param name="cameraImageTopic" value="/pickelhaube_resized/cam1/image"/>
        <param name="cameraInfoTopic" value="/pickelhaube_resized/cam1/camera_info"/>
        <param name="cameraFrame" value="/cam1_rectified_frame"/>
        <param name="outputTopic" value="/meshdist/cam1/original"/>
        <param name="labelsTopic" value="/meshdist/cam1/projected_pc"/>
        <param name="distanceTopic" value="/meshdist/cam1/projected_pc_distance"/>
    </node>

    <node pkg="background_foreground_segmentation" type="background_foreground_segmentation_node2"
          name="dataset_creator_cam2" output="screen">
        <rosparam command="load" file="$(find background_foreground_segmentation)/config/online_dataset_creator.yaml"/>
        <param name="outputFolder" value="/tmp/"/>
        <param name="cameraImageTopic" value="/pickelhaube_resized/cam2/image"/>
        <param name="cameraInfoTopic" value="/pickelhaube_resized/cam2/camera_info"/>
        <param name="cameraFrame" value="/cam2_rectified_frame"/>
        <param name="outputTopic" value="/meshdist/cam2/original"/>
        <param name="labelsTopic" value="/meshdist/cam2/projected_pc"/>
        <param name="distanceTopic" value="/meshdist/cam2/projected_pc_distance"/>
    </node>

    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find background_foreground_segmentation)/config/segmented2_icp.rviz" />

    <!-- should be started last for handover to ICP-->
    <include file="$(find background_foreground_segmentation)/launch/pickelhaube/pickelhaube_versavis_from_bag.launch">
        <arg name="rosbag" value="$(arg rosbag)" />
        <arg name="rate" value="0.04" />
    </include>

    <!-- for Realsense: Fix camera_pose_frame to robot-->
    <node pkg="tf2_ros" type="static_transform_publisher" name="tracking_cam_to_rslidar"
				args="0.008 -0.309 0.12 0 0 0 1  /camera_pose_frame /rslidar"/>

    <node name="realsense_broadcast"
          type="realsense_broadcast_node"
          pkg="cpt_selective_icp_dyn"
          output="screen" >
          <param name="odomTopic" value="/camera/odom/sample" />
          <param name="realsenseOdomTopic" value="/realsense_odom" />
          <param name="inputQueueSize" value="5" />
          <param name="tfMapFrame" value="5" />
          <param name="cameraPoseFrame" value="camera_pose_frame" />
          <param name="cameraOdomFrame" value="camera_odom_frame" />
          <param name="realsenseCov" value="0.1" />
    </node>

    <node name="mapper"
          type="cpt_selective_icp_dyn_node"
          pkg="cpt_selective_icp_dyn"
          output="screen" >
          <!--launch-prefix="tmux split-window" -->
    <rosparam command="load" file="$(find background_foreground_segmentation)/launch/realsense_experiments/mapper_parameters_dyn.yaml" />
                <param name="scanTopic" value="/rslidar_points" />
                <param name="odomTopic" value="/camera/odom/sample" />
                <param name="skipScans" value="1" /> 
                <param name="ekfEnable" value="false" />
        <param name="cadTopic" value="mesh_publisher/mesh_out" />
        <param name="icpConfig"
               value="$(find background_foreground_segmentation)/launch/paper_experiments/full_icp.yaml" />
        <param name="selectiveIcpConfig"
               value="$(find background_foreground_segmentation)/launch/paper_experiments/selective_icp.yaml" />
        <param name="inputFiltersConfig"
               value="$(find background_foreground_segmentation)/launch/paper_experiments/input_filters.yaml" />
        <param name="mapPostFiltersConfig"
               value="$(find background_foreground_segmentation)/launch/paper_experiments/map_post_filter.yaml" />
        <param name="mapPreFiltersConfig"
               value="$(find background_foreground_segmentation)/launch/paper_experiments/map_pre_filter.yaml" />
        <param name="path"
                 value="$(find cpt_selective_icp_dyn)" />
    </node>

    <node pkg="background_foreground_segmentation"
          type="label_aggregator.py"
          name="label_writer"
          output="screen">
        <rosparam>
        publish_labels: false
        store_labels: true
        label_frequency: 3
        image_topics:
          - - /pickelhaube_resized/cam0/image
            - /meshdist/cam0/projected_pc
            - /meshdist/cam0/projected_pc_distance
          - - /pickelhaube_resized/cam1/image
            - /meshdist/cam1/projected_pc
            - /meshdist/cam1/projected_pc_distance
          - - /pickelhaube_resized/cam2/image
            - /meshdist/cam2/projected_pc
            - /meshdist/cam2/projected_pc_distance
        out_topics:
          - /meshdist/cam0/labels
          - /meshdist/cam1/labels
          - /meshdist/cam2/labels
        label_options:
          downsamplingFactor: 1
          useSuperpixel: true
          agreement: false
          foregroundTrustRegion: false
          fgBgThreshold: 50
          numberOfSuperPixel: 400
        </rosparam>
        <param name="label_path" value="$(find background_foreground_segmentation)/logs/$(arg logprefix)/" />
    </node>


    <node name="mesh_publisher"
          pkg="cpt_utils"
          type="mesh_publisher_node"
          output="screen"
          launch-prefix="bash -c 'sleep 5; $0 $@'">
        <param name="publish_on_start" value="true"/>
        <param name="default_filename" value="$(arg cad_file)"/>
        <param name="frame_name" value="marker"/>
      </node>
</launch>
